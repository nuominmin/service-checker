// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"service-checker/internal/biz"
	"service-checker/internal/conf"
	"service-checker/internal/factory"
	"service-checker/internal/server"
	"service-checker/internal/service"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(confServer *conf.Server, data *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	notifier, err := factory.NewAlert(data)
	if err != nil {
		return nil, nil, err
	}
	workerPoolManager, cleanup := factory.NewNewWorkerPool()
	bizService := biz.NewService(data, notifier, workerPoolManager, logger)
	serviceService, cleanup2, err := service.NewService(bizService)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	httpServer := server.NewHTTPServer(confServer, serviceService)
	app := newApp(logger, httpServer, bizService)
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
